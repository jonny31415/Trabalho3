# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    # outputs:
    #   output1: ${{ steps.verify-changed-files.outputs.changed_files }}
    steps:
    - uses: actions/checkout@v3
    # - uses: dorny/paths-filter@v2
    #   id: filter
    #   with:
    #     filters: |
    #       data:
    #         - 'data/**'
    - name: Verify Changed files
      uses: tj-actions/verify-changed-files@v16
      id: verify-changed-files
      with:
        files: |
           data/password_correct.txt

    - name: Run step only when any of the above files change.
      if: steps.verify-changed-files.outputs.files_changed == 'true'
      run: |
        echo "Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}"
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # Run if any file from 'data/' was changed
    - name: Check change in data folder
      if: steps.filter.outputs.data == 'true'
      run: |
        python generate_hash.py
        echo "Some Password File Changed"
    # Update hash file and push
    - name: Change data/password_hash.txt
      if: steps.filter.outputs.data == 'true'
      run: |
        echo "Updating hash file..."
        git config --global user.name "github-actions[bot]"
        git config --global user.email "actions[bot]@users.noreply.github.com"
        git add data/password_hash.txt
        git commit -m "GitHub Action AutoUpdate"
        git push
    - name: Test with python
      run: |
        python login.py
